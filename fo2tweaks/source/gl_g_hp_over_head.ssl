#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\sfall\define_extra.h"
#include "..\headers\sfall\sfall.h"
#include "..\headers\sfall\dik.h"
#include "..\headers\sfall\lib.misc.h"
#include "..\headers\fo2tweaks\fo2tweaks.h"

#define NAME "gl_g_hp_over_head"
#define set_hp_over_head "hp_over_head"

variable clear_float;
variable enabled;
variable was_in_combat := 0;

procedure update_hp begin
  variable who, cur_hp, max_hp, color;
  ndebug("update_hp ping");

  if combat_is_initialized then set_global_script_repeat(6);
  else begin
    set_global_script_repeat(0);
    return;
  end

    foreach who in list_as_array(LIST_CRITTERS) begin
      if not is_dead(who) then begin
        color := FLOAT_MSG_RED;
        if in_party(who) then color := FLOAT_MSG_GREEN;
        if combat_is_initialized then begin
          // and elevation(who) == elevation(dude_obj) then begin //elevation check too slow
          cur_hp := get_critter_stat(who, STAT_current_hp);
          if cur_hp > 0 then float_msg(who, sprintf("%d", cur_hp), color);
        end else begin
          float_msg(who, "", color);
        end
      end
    end
end

procedure start begin
  if game_loaded then begin
    enabled := fo2tweaks_setting(sec_main, set_hp_over_head);
    if enabled == 1 then begin
      ndebug("initialized");
      register_hook_proc(HOOK_COMBATTURN, update_hp);
      register_hook_proc(HOOK_COMBATDAMAGE, update_hp);
      register_hook_proc(HOOK_USEOBJ, update_hp);
      register_hook_proc(HOOK_USEOBJON, update_hp);
      register_hook_proc(HOOK_GAMEMODECHANGE, update_hp);
    end
  end else begin
    if enabled == 1 then begin
      call update_hp;
    end
  end
end
