procedure start;

#include "..\headers\define.h"
#include "..\headers\sfall\define_extra.h"
#include "..\headers\command.h"
#include "..\headers\sfall\sfall.h"
#include "..\headers\fo2tweaks\fo2tweaks.h"
#include "..\headers\sfall\dik.h"

variable box_num;
variable box_color;

procedure update_box(variable show_new);
procedure gamemode_hook;
//procedure invenmove_hook;
procedure keypress_hook;
procedure mouseclick_hook;


procedure start begin
  if game_loaded then begin
   variable enabled := get_ini_setting(fo2tweaks_ini + "|" + sec_main + "|" + set_ammobox);
   box_num := get_ini_setting(fo2tweaks_ini + "|" + set_ammobox + "|" + set_ammobox_number);
   box_color := get_ini_setting(fo2tweaks_ini + "|" + set_ammobox + "|" + set_ammobox_color);
   if enabled == 1 then begin
    register_hook_proc(HOOK_GAMEMODECHANGE, gamemode_hook);
//    register_hook_proc(HOOK_INVENTORYMOVE, invenmove_hook);
    register_hook_proc(HOOK_KEYPRESS, keypress_hook);
    register_hook_proc(HOOK_MOUSECLICK, mouseclick_hook);
    debug_msg("gl_g_ammobox: initialized");
   end
  end
end

//combat start/stop
procedure gamemode_hook begin
  variable gamemode := get_game_mode;
  call update_box(1);
  gamemode := get_game_mode;
  debug_msg("gl_g_ammobox: update box - gamemode");
end

//keyboard B
procedure keypress_hook begin
  if in_combat then begin
    if key_pressed(DIK_B) and in_combat then begin
      call update_box(0);
      debug_msg("gl_g_ammobox: update box - keyboard");
    end
  end
end

//middle mouse
procedure mouseclick_hook begin
  if in_combat then begin
    variable event := get_sfall_arg;
    variable button := get_sfall_arg;
    if button == 2 and event == 1 then begin //pressed middle
      call update_box(0);
      debug_msg("gl_g_ammobox: update box - mouse");
    end
  end
end

/*
// doesn't work very well and probably unnecessary
//inventory moving
procedure invenmove_hook begin
  if in_combat then begin
    //https://github.com/phobos2077/sfall/blob/master/artifacts/scripting/hookscripts.txt#L410
    variable slots := [1, 2, 4, 6];
    variable target_slot := get_sfall_arg;
    if scan_array(slots, target_slot) != -1 then begin
      call update_box(0);
      debug_msg("gl_g_ammobox: update box - inventory move");
    end
  end
end
*/

//some hooks are run before actual change
//show_new = 0 shows currently active ammo
//show_new = 1 shows currently inactive ammo with will become active
procedure update_box(variable show_new) begin
  variable item, ammo_pid, ammo_label;
  if in_combat then begin

    if show_new == 1 then begin
      ammo_pid := get_active_ammo_pid(dude_obj);
    end else begin
      ammo_pid := get_dude_inactive_ammo_pid;
    end

    if ammo_pid != -1 then begin
      ammo_label := message_str_game(GAME_MSG_PRO_ITEM, ammo_pid * 100);
      set_iface_tag_text(box_num, ammo_label, box_color);
      if not is_iface_tag_active(box_num) then begin
        show_iface_tag(box_num);
      end
    end else begin
      if is_iface_tag_active(box_num) then begin
        hide_iface_tag(box_num);
      end
    end

  end else begin //end of combat
    if is_iface_tag_active(box_num) then begin
      hide_iface_tag(box_num);
    end
  end
end
