#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\sfall\define_extra.h"
#include "..\headers\sfall\sfall.h"
#include "..\headers\sfall\dik.h"
#include "..\headers\sfall\lib.misc.h"
#include "..\headers\sfall\lib.inven.h"
#include "..\headers\fo2tweaks\fo2tweaks.h"
#include "..\headers\party_op\party_op.h"

#define NAME "gl_g_auto_reload"
#define set_auto_reload "auto_reload"
variable old_game_mode := 0, new_game_mode;
variable enabled;

procedure auto_reload begin
  variable begin
  	i;
  	weapon := 0;
  	ammopid := 0;
  	list;
  	item;
  	bestammo;
  	ammo;
  	caliber;
  	magsize;
  	who := dude_obj;
  end

  new_game_mode := get_game_mode;
  ndebug("old mode " + old_game_mode + ", new mode " + new_game_mode);

  if in_combat then begin //don't do anything in combat
    ndebug("in combat, pass");
    old_game_mode := new_game_mode; //track current mode for next invocation
    return;
  end

  if old_game_mode bwand COMBAT == 0 then begin //if not coming from combat mode then skip
    ndebug("not coming from combat, pass");
    old_game_mode := new_game_mode;
    return;
  end

  old_game_mode := new_game_mode;

  i := 1;
  while i <= 2 do begin
		weapon := critter_inven_obj2(who, i);
		if not weapon then return;

		ammopid := get_weapon_ammo_pid(weapon);
		if weapon then begin
			caliber := get_proto_data(obj_pid(weapon), PROTO_WP_CALIBER);
			magsize := get_proto_data(obj_pid(weapon), PROTO_WP_MAG_SIZE);

			ndebug("found weapon " + obj_name(weapon) + " with caliber " + caliber + ", ammo pid " + ammopid);
			ndebug("magsize is  " + magsize + " ammo count " + get_weapon_ammo_count(weapon));

			if magsize > get_weapon_ammo_count(weapon) then begin

        if ammopid == -1 then begin
  				// try to find some ammo for this weapon
  				ndebug("search best ammo...");
  				bestammo := 0;
  				list := inven_as_array(who);
  				foreach item in list begin
  					if is_ammo(item)
  						and get_proto_data(obj_pid(item), PROTO_AM_CALIBER) == caliber
  						then bestammo := item;
  				end
        end else bestammo := obj_carrying_pid_obj(who, ammopid);

				if bestammo then begin
				  ammopid := obj_pid(bestammo);
					ndebug("found ammo pid " + obj_pid(bestammo));
					// first, unload existing ammo
					call inc_ammo_count(who, ammopid, get_weapon_ammo_count(weapon));
					// then, load new ammo
					set_weapon_ammo_pid(weapon, obj_pid(bestammo));
					if (actual_ammo_count(who, bestammo) < magsize) then magsize := actual_ammo_count(who, bestammo);
					set_weapon_ammo_count(weapon, magsize);
					call inc_ammo_count(who, obj_pid(bestammo), - magsize);
					reg_anim_clear(who);
					animate_stand_obj(who);
				end else ndebug("not found :(");
			end
		end
		i++;
  end
  intface_redraw;
end

procedure start begin
  if game_loaded then begin
    enabled := fo2tweaks_setting(sec_main, set_auto_reload);
    if enabled == 1 then begin
      ndebug("initialized");
      register_hook_proc(HOOK_GAMEMODECHANGE, auto_reload);
    end
  end
end
