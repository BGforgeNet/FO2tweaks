#include "..\headers\define.h"
#include "..\headers\sfall\sfall.h"
#include "..\headers\ecco\_pbs_main\mod.h"
#include "..\headers\fo2tweaks\fo2tweaks.h"

#define sec_grenades_chance "grenades_chance"
#define set_grenades_weapons "weapons"
#define set_grenades_ammo "ammo"
#define set_grenades_chance "grenades_chance"
#define NAME "gl_g_grenades_tohit"

procedure start;
procedure tohit_hook;

variable begin
  explosive_weapon_pids;
  explosive_ammo_pids;
end

procedure start begin
  if game_loaded then begin
    variable enabled := fo2tweaks_setting(sec_main, set_grenades_chance);
    if enabled == 1 then begin
      register_hook_proc(HOOK_TOHIT, tohit_hook);
      explosive_weapon_pids := load_comsep_ini_setting(fo2tweaks_ini, sec_grenades_chance, set_grenades_weapons);
      fix_array(explosive_weapon_pids);
      explosive_ammo_pids := load_comsep_ini_setting(fo2tweaks_ini, sec_grenades_chance, set_grenades_ammo);
      fix_array(explosive_ammo_pids);
      ndebug("initialized");
    end
  end
end

procedure tohit_hook begin
  variable tohit;
  variable attacker;
  variable target;
  variable explosive_weapon_pids;
  variable explosive_ammo_pids;
  variable pid;
  variable subtract_ac;

  tohit := get_sfall_arg;
  attacker := get_sfall_arg;
  target := get_sfall_arg;

  //check weapon
  if is_in_array(get_active_weapon_pid(attacker), explosive_weapon_pids)
  then subtract_ac := true;

  //check ammo
  if is_in_array(get_active_ammo_pid(attacker), explosive_ammo_pids)
  then subtract_ac := true;

  //add target's armor ac to hit chance
  if subtract_ac == true then begin
    variable nat_ac, armor, armor_ac;
    armor := critter_inven_obj(target, INVEN_TYPE_WORN);
    if obj_item_subtype(armor) == item_type_armor then begin
      armor_ac := get_proto_data(obj_pid(armor), PROTO_AR_AC);
      tohit := tohit + armor_ac;
      ndebug("chance to hit increased by " + armor_ac);
    end
  end

  //cap chance
  if (tohit > 95) then begin
    tohit := 95;
  end

  set_sfall_return(tohit);
  set_sfall_arg(0, tohit);

end
