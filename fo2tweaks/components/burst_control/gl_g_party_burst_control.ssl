// gl_g_party_no_burst.ssl
/* Include Files */
#include ".\headers\define.h"
#include ".\headers\command.h"
#include ".\_sfall383_headers\define_extra.h"
#include ".\_sfall383_headers\sfall.h"
#include ".\_sfall383_headers\dik.h"
#include ".\!pbs_rebalance_sources\_pbs_main\lib.misc.h"

variable burst_msg;
variable noburst_msg;
variable burst_key;

procedure start;
procedure keypress_hook_handler;
procedure toggle_burst(variable manual);
procedure bool_reverse(variable x);

procedure toggle_burst(variable manual) begin
  variable mode;
  variable new_mode;
  variable burst_enabled;
  variable msg;
  burst_enabled := get_sfall_global_int("g_burst0");
  debug_msg("g_burst0: " + burst_enabled);
  mode := bool_reverse(burst_enabled);
  if manual == 1 then begin
    new_mode := bool_reverse(mode);
    if (new_mode == 1) then begin
      msg := noburst_msg;
    end else begin
      msg := burst_msg;
    end
    float_msg(dude_obj, msg, FLOAT_MSG_BLUE);
  end else begin
    new_mode := mode;
  end
  debug_msg("mode=" + mode + " new_mode="+new_mode + " manual="+manual);
  if (party_size > 1) then begin
    variable who;
    foreach who in party_member_list(0) begin
      if (who != dude_obj) then begin
        set_critter_burst_disable(who, new_mode);
      end
    end
    set_sfall_global("g_burst0", bool_reverse(new_mode));
  end
  burst_enabled := get_sfall_global_int("g_burst0");
  debug_msg("g_burst1: " + burst_enabled);
end

procedure bool_reverse(variable x) begin
  if x == 0 then begin
    x := 1;
  end else begin
    x := 0;
  end
  return x;
end

procedure keypress_hook_handler begin
  if (not(in_world_map)) then begin
    if (key_pressed(burst_key)) then begin
      call toggle_burst(1); //manual
    end
  end
end

procedure start begin
  if (game_loaded) then begin
    set_global_script_repeat(300);
    burst_msg := get_ini_string("fo2tweaks.ini|" + "SETTINGS|" + "BurstMessage");
    noburst_msg := get_ini_string("fo2tweaks.ini|" + "SETTINGS|" + "NoBurstMessage");
    burst_key := parse_hotkey(get_ini_string("fo2tweaks.ini|" + "SETTINGS|" + "BurstKey"));
    register_hook_proc(HOOK_KEYPRESS, keypress_hook_handler);
  end else begin
    call toggle_burst(0); //not manual
  end
end
