// Created by Mr.Stalin
// https://github.com/FakelsHub/sFall-Extended/commit/ecfa68a04a9178c21cdd178874b9f4fa8523f49c#commitcomment-36388003
#define SCRIPT_REALNAME "gl_g_grenades_anywhere"
#include "headers/fo2tweaks/fo2tweaks.h"

#define ATKTYPE_LWEAPON_SECOND      ATKTYPE_LWEP2
#define ATKTYPE_RWEAPON_SECOND      ATKTYPE_RWEP2
#define ATKMODE_THROWNING           ATKMODE_PRI_THROW
#define TARGET_PID 0x500000C // scroll blocker
#define target_destroy if target then call destroy_target

procedure start;
procedure target_object_handler;
procedure explosion_handler;
procedure gamemode_handler;
procedure destroy_target;

variable begin
  target;
  only_once;
  explosive_weapon_pids;
  explosive_ammo_pids;
end

procedure start begin
  if game_loaded then begin
    variable enabled = fo2tweaks_setting(sec_main, "improved_grenades");
    if enabled == 1 then begin
      explosive_weapon_pids = fo2tweaks_comsep_setting("improved_grenades", "weapons");
      fix_array(explosive_weapon_pids);
      explosive_ammo_pids = fo2tweaks_comsep_setting("improved_grenades", "ammo");
      fix_array(explosive_ammo_pids);
      register_hook_proc(HOOK_TARGETOBJECT, target_object_handler);
      register_hook_proc(HOOK_ONEXPLOSION, explosion_handler);
      register_hook_proc(HOOK_GAMEMODECHANGE, gamemode_handler);
      ndebug("enabled");
    end
  end
end

procedure target_object_handler begin
  variable weapon_pid, ammo_pid, tile, object, list;

  if get_cursor_mode != CURSOR_TARGETING then begin
    target_destroy;
    return;
  end

  if get_sfall_arg != 0 then begin // event type: exit on actual attack
    only_once = true;
    return;
  end

  if get_sfall_arg then begin // exit on valid target
    target_destroy;
    return;
  end
  weapon_pid = get_active_weapon_pid(dude_obj);
  ndebug("weapon pid = " + weapon_pid);

  if not weapon_pid then begin
    target_destroy;
    return;
  end

  ammo_pid = get_active_ammo_pid(dude_obj);
  ndebug("ammo pid = " + ammo_pid);

  if not (is_in_array(weapon_pid, explosive_weapon_pids))
    and not (ammo_pid and (is_in_array(ammo_pid, explosive_ammo_pids)) )
  then begin
    target_destroy;
    return;
  end

  tile = tile_under_cursor;
  if tile == dude_tile or tile == -1 then return; // TODO: need fix bug explosion on dude tile
  if target then begin
    ndebug("move throwing target to: " + tile);
    move_to(target, tile, dude_elevation);
  end
  else begin
    ndebug("create throwing target at: " + tile);
    target = create_object(TARGET_PID, tile, dude_elevation);
    set_flags(target, get_flags(target) bwor FLAG_FLAT); // skip "X was hit instead of Scroll Blocker" on display.
  end
  set_sfall_arg(1, 1); // set valid target
  set_sfall_arg(2, target);
  set_sfall_return(target);

end

#define _attacker    1
#define _throw       6
procedure explosion_handler begin
  variable object, list, tile;
  if only_once and target and get_sfall_arg_at(_throw) and get_sfall_arg_at(_attacker) == dude_obj then begin
    ndebug("explosion_handler");
    tile = tile_num(target);
    list = objects_in_radius(tile, random(4, 6), dude_elevation, OBJ_TYPE_CRITTER);
    foreach object in list begin
      // see https://github.com/BGforgeNet/FO2tweaks/issues/98
      if object != dude_obj and not in_party(object) then begin
        set_object_data(object, OBJ_DATA_WHO_HIT_ME, dude_obj);
      end
    end
    only_once = false;
  end
end

procedure gamemode_handler begin
  if get_game_mode != PCOMBAT then target_destroy;
end

procedure destroy_target begin
  ndebug("destroy throwing target");
  destroy_object(target);
  target = 0;
end
