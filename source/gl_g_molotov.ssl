#define SCRIPT_REALNAME "gl_g_molotov"
#include "headers/fo2tweaks/fo2tweaks.h"

#define set_molotov_fire "molotov_fire"

procedure start;
procedure afterhit_hook;
procedure damage_hook;
procedure set_attack_fire;

variable enabled = 0;

procedure set_molotov_stats begin
  set_proto_data(PID_MOLOTOV_COCKTAIL, PROTO_WP_DMG_TYPE, DMG_fire);
  set_proto_data(PID_MOLOTOV_COCKTAIL, PROTO_WP_PERK, PERK_weapon_flameboy);
  ndebug("set molotov to fire type, enabled flameboy");
end

procedure start begin
  if game_loaded then begin
    enabled = fo2tweaks_setting(sec_main, set_molotov_fire);
    if enabled == 1 then begin
      call set_molotov_stats;
      register_hook_proc(HOOK_AFTERHITROLL, afterhit_hook); // miss hit
      register_hook_proc(HOOK_ITEMDAMAGE, damage_hook); // normal hit
      ndebug("initialized");
    end
  end
end

procedure map_enter_p_proc begin
  if enabled == 1 then call set_molotov_stats;
end


procedure afterhit_hook begin
/*
  Runs after fallout has decided if an attack will hit or miss
  int     arg1 - If the attack will hit. (0 - critical miss, 1 - miss, 2 - hit, 3 - critical hit)
  critter arg2 - The attacker
  critter arg3 - The target of the attack
*/
  variable hit_type, attacker, target;
  variable item_pid;

  hit_type = get_sfall_arg;
  attacker = get_sfall_arg;
  target = get_sfall_arg;

  if target and attacker then begin
    if (is_critter(target) and hit_type <= 1)
      or (not is_critter(target) and hit_type)
    then begin // miss hit
      item_pid = get_active_weapon_pid(attacker);
      if item_pid == PID_MOLOTOV_COCKTAIL then begin
        ndebug("attacker is " + obj_name(attacker) + ", target is " + obj_name(target));
        call set_attack_fire;
      end
    end
  end
  ndebug("afterhit hook");
end

procedure damage_hook begin
/*
  Runs when retrieving the damage rating of the players used weapon. (Which may be their fists.)
  int     arg1 - The default min damage
  int     arg2 - The default max damage
  item    arg3 - The weapon used. (0 if unarmed)
*/
  variable weapon;
  weapon = get_sfall_arg_at(2);
  if weapon and obj_pid(weapon) == PID_MOLOTOV_COCKTAIL then call set_attack_fire;
  ndebug("damage hook");
end

procedure set_attack_fire begin
  set_attack_explosion_pattern(1, 0);
  set_attack_is_explosion_fire;
  ndebug("set attack to fire explosion.");
end
