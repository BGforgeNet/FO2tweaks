#define SCRIPT_REALNAME "gl_g_hp_over_head"

#include "headers/fo2tweaks/fo2tweaks.h"

#define set_hp_over_head "hp_over_head"

variable enabled;
variable old_mode := 0, new_mode;

procedure clear_all_floats;

procedure update_hp begin
  variable who, cur_hp, max_hp, color, msg;
  ndebug("update_hp ping");

  foreach who in list_as_array(LIST_CRITTERS) begin
    if is_dead(who) then continue;
    //float only nearby or party. Too many floats won't work
    if (not in_party(who)) and tile_distance_objs(dude_obj, who) > 30 then continue;

    color := FLOAT_MSG_RED;
    if in_party(who) then color := FLOAT_MSG_GREEN;

    if combat_is_initialized then begin
      cur_hp := get_critter_stat(who, STAT_current_hp);
      msg := sprintf("%d", cur_hp);
    end else msg := "";

    float_msg(who, msg, color);
  end

end

procedure gamemode_handler begin
  new_mode := get_game_mode;
  if mode_ended(COMBAT, old_mode, new_mode) then begin
    ndebug("combat ended, clearing floats");
    call clear_all_floats;
    set_global_script_repeat(0);
  end
  if mode_started(COMBAT, old_mode, new_mode) then begin
    ndebug("combat started, enabling floats");
    call update_hp;
    set_global_script_repeat(12); // this is ugly, but I can't find a better solution
  end
  old_mode := new_mode;
end

procedure clear_all_floats begin
  variable who;
  foreach who in list_as_array(LIST_CRITTERS) begin
    if is_dead(who) then continue;
    if not obj_on_screen(who) then continue;
    float_msg(who, "", 0);
  end
end

procedure clear_dead_float begin
  variable who := get_sfall_arg;
  float_msg(who, "", 0);
end

procedure start begin
  if game_loaded then begin
    enabled := fo2tweaks_setting(sec_main, set_hp_over_head);
    if enabled == 1 then begin
      ndebug("initialized");
      register_hook_proc(HOOK_COMBATTURN, update_hp);
      register_hook_proc(HOOK_USEOBJ, update_hp);
      register_hook_proc(HOOK_USEOBJON, update_hp);
      register_hook_proc(HOOK_GAMEMODECHANGE, gamemode_handler);
      register_hook_proc(HOOK_ONDEATH, clear_dead_float);
    end
  end else begin
    if enabled == 1 then begin
      call update_hp;
    end
  end
end
